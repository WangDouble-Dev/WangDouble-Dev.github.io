<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Nginx on Double Blog</title>
    <link>https://WangDouble-Dev.github.io/categories/nginx/</link>
    <description>Recent content in Nginx on Double Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sat, 23 Dec 2023 18:05:16 +0800</lastBuildDate>
    <atom:link href="https://WangDouble-Dev.github.io/categories/nginx/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>前后端分离PHP项目线上部署记录</title>
      <link>https://WangDouble-Dev.github.io/post/online_deployment/</link>
      <pubDate>Sat, 23 Dec 2023 18:05:16 +0800</pubDate>
      <guid>https://WangDouble-Dev.github.io/post/online_deployment/</guid>
      <description>前提是已具备基本LNMP环境。以后端的视角记录。主要是Nginx配置。&#xA;背景 项目所在目录：/var/www/html/project_name/&#xA;前端项目所在目录：/var/www/html/project_name/web/&#xA;后端项目所在目录：/var/www/html/project_name/api/&#xA;前端部署 在/var/www/html/project_name/web/下解压缩前端提供的压缩包。&#xA;配置nginx server { listen 80; server_name domain.com www.domain.com; return 301 https://www.domain.com$request_uri; } server { listen 443 ssl http2; #【1】 server_name www.domain.com domain.com; # 域名设置 access_log /var/log/nginx/www.domain.com-access.log; error_log /var/log/nginx/www.domain.com-error.log; index index.html index.htm; # 日志目录 ssl_certificate /etc/letsencrypt/live/domain.com/fullchain.pem; ssl_certificate_key /etc/letsencrypt/live/domain.com/privkey.pem; client_max_body_size 5m; root /var/www/html/project_name/web; index index.html index.htm; location / { try_files $uri $uri/ /index.html;#【2】 } location ^~ /api/ {#【3】 add_header access-control-allow-origin *; proxy_pass http://127.0.0.1:8082;#将api路径下的请求转发到后端 proxy_connect_timeout 1800; proxy_read_timeout 1800; proxy_send_timeout 1800; proxy_set_header X-Forwarded-Host $host:$server_port; proxy_set_header X-Real-IP $remote_addr; proxy_set_header Origin $host:$server_port; proxy_set_header Referer $host:$server_port; proxy_set_header Accept-Encoding &amp;#34;&amp;#34;; # 去除/api/前缀 rewrite ^/api/(.</description>
    </item>
  </channel>
</rss>
