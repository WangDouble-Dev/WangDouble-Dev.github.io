<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Double Blog</title>
    <link>https://WangDouble-Dev.github.io/post/</link>
    <description>Recent content in Posts on Double Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Fri, 14 Mar 2025 17:07:01 +0800</lastBuildDate>
    <atom:link href="https://WangDouble-Dev.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>资源</title>
      <link>https://WangDouble-Dev.github.io/post/resource/</link>
      <pubDate>Fri, 14 Mar 2025 17:07:01 +0800</pubDate>
      <guid>https://WangDouble-Dev.github.io/post/resource/</guid>
      <description>产品 Ant Design&#xA;网站建设 Hugo</description>
    </item>
    <item>
      <title>Windows系统下隐藏QuickLook在系统托盘中的图标</title>
      <link>https://WangDouble-Dev.github.io/post/quick_look/</link>
      <pubDate>Mon, 05 Aug 2024 20:51:39 +0800</pubDate>
      <guid>https://WangDouble-Dev.github.io/post/quick_look/</guid>
      <description>想要在Windows电脑上实现像MacBook一样，空格预览大多数文件的功能，所以在微软应用商店上下载了QuickLook。在评论中看到可在系统托盘（通知区域） 中隐藏QuickLook图标，故记录一下。&#xA;在C:Users\用户名\AppData\Roaming\pooi.moe\QuickLook找到QuickLook.config。&#xA;记事本打开配置文件并在&amp;lt;Settings&amp;gt;&amp;lt;/Settings&amp;gt;里添加&amp;lt;ShowTrayIcon&amp;gt;False&amp;lt;/ShowTrayIcon&amp;gt;后保存，再重启软件右下角终于没有图标了。&#xA;恢复可删除添加内容或值False改为True。&#xA;有部分人的目录可能是C:\Users\用户名\AppData\Local\Packages\21090PaddyXu.QuickLook_egxr34yet59cg\LocalCache\Roaming\pooi.moe\QuickLook。&#xA;改完后的QuickLook.config文件如下&#xA;&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;utf-8&amp;#34;?&amp;gt; &amp;lt;Settings&amp;gt; &amp;lt;LastUpdateTicks&amp;gt;638584839751137378&amp;lt;/LastUpdateTicks&amp;gt; &amp;lt;ShowTrayIcon&amp;gt;False&amp;lt;/ShowTrayIcon&amp;gt; &amp;lt;/Settings&amp;gt; 补充说明&#xA;在 Windows 系统中，系统托盘（通知区域）位于任务栏的右侧，包含了各种系统和应用程序的图标，这些图标可以提供通知、快速访问应用程序的设置或其他功能。 &amp;lt;ShowTrayIcon&amp;gt;False&amp;lt;/ShowTrayIcon&amp;gt; 在 Windows 系统中的作用通常如下：&#xA;隐藏托盘图标：如果某个应用程序的配置文件包含 &amp;lt;ShowTrayIcon&amp;gt;False&amp;lt;/ShowTrayIcon&amp;gt;，那么当该应用程序运行时，它不会在系统托盘中显示其图标。这意味着用户将无法通过系统托盘直接访问该应用程序的快捷功能或查看其状态。&#xA;减少托盘图标数量：某些用户或系统管理员可能希望减少系统托盘中的图标数量，以保持任务栏的简洁和清晰。因此，可以通过设置 &amp;lt;ShowTrayIcon&amp;gt;False&amp;lt;/ShowTrayIcon&amp;gt; 来实现这一目的。&#xA;配置文件：这一设置通常出现在应用程序的配置文件（如 .xml、.config 或 .ini 文件）中。开发人员或高级用户可以手动编辑这些文件，以控制应用程序的行为。</description>
    </item>
    <item>
      <title>IDE|PHPStorm Power Save Mode模式开启导致代码不提示及自动补全失效</title>
      <link>https://WangDouble-Dev.github.io/post/ide_power_save_mode/</link>
      <pubDate>Sun, 25 Feb 2024 13:24:05 +0800</pubDate>
      <guid>https://WangDouble-Dev.github.io/post/ide_power_save_mode/</guid>
      <description> 某天用PHPStorm写代码的时候，代码突然不提示了,不会自动补全及导入类了。代码编写速度直线下降。&#xA;检查了很多设置，最后发现是IDE的Power Save Mode模式开启了。&#xA;通常，IDE（集成开发环境）的省电模式是为了在使用电池供电时减少系统资源的使用，以延长电池寿命。省电模式通常涉及一系列设置和调整，以降低软件的性能需求，从而减少能耗。这些调整可能包括：&#xA;自动保存设置： 将自动保存的频率调整为更长的时间间隔，以减少IO操作。&#xA;自动代码分析： 降低代码分析的频率或关闭一些耗费资源的代码检查功能。&#xA;自动代码补全： 可能会降低或禁用自动代码补全功能，因为它通常需要消耗一定的计算资源。&#xA;实时语法检查： 减少或关闭实时语法检查，以降低对系统资源的占用。&#xA;背景任务： 延迟或限制一些后台任务的执行，以减少对CPU和内存的需求。&#xA;界面动画和效果： 禁用一些界面动画和特效，以减少对图形处理单元（GPU）的负担。&#xA;插件管理： 停用不必要的插件，因为一些插件可能在后台执行任务，增加了系统负担。&#xA;缓存策略： 调整缓存策略，减少缓存刷新的频率。&#xA;关闭省电模式方法：&#xA;通过点击IDE的右下角的电源图标，关闭Power Save Mode模式。 也可以通过File -&amp;gt; Power Save Mode菜单项来切换Power Save Mode模式。 参考文档：&#xA;PHPStorm禁用自动突出显示用法 </description>
    </item>
    <item>
      <title>Github GraphQL API</title>
      <link>https://WangDouble-Dev.github.io/post/github_explorer/</link>
      <pubDate>Sun, 24 Dec 2023 15:00:53 +0800</pubDate>
      <guid>https://WangDouble-Dev.github.io/post/github_explorer/</guid>
      <description>Github GraphQL API是Github提供的一种API接口。它可以让你更方便的获取Github上的数据。 请求该API最直观最简单的方式就是使用Github GraphQL API资源管理器。&#xA;比如，假如你想知道你的仓库ID和Discussions分类ID。就可以使用Github GraphQL API查询。&#xA;假设你的仓库url地址是https://github.com/owner/repo_name 在Github GraphQL API资源管理器中输入如下查询语句。&#xA;{ repository(owner: &amp;#34;owner&amp;#34;, name: &amp;#34;repo_name&amp;#34;) { id name discussionCategories(first:1) { nodes{ id name } pageInfo{ hasNextPage hasPreviousPage } totalCount } } } 就会得到如下结果。&#xA;{ &amp;#34;data&amp;#34;: { &amp;#34;repository&amp;#34;: { &amp;#34;id&amp;#34;: &amp;#34;R_key&amp;#34;, &amp;#34;name&amp;#34;: &amp;#34;repo_name&amp;#34;, &amp;#34;discussionCategories&amp;#34;: { &amp;#34;nodes&amp;#34;: [ { &amp;#34;id&amp;#34;: &amp;#34;DIC_key&amp;#34;, &amp;#34;name&amp;#34;: &amp;#34;Announcements&amp;#34; } ], &amp;#34;pageInfo&amp;#34;: { &amp;#34;hasNextPage&amp;#34;: true, &amp;#34;hasPreviousPage&amp;#34;: false }, &amp;#34;totalCount&amp;#34;: 6 } } } } 更多其他信息查询及资源管理器的使用可参考官方文档。</description>
    </item>
    <item>
      <title>Github Pages 评论系统 Giscus</title>
      <link>https://WangDouble-Dev.github.io/post/giscus/</link>
      <pubDate>Sun, 24 Dec 2023 14:30:08 +0800</pubDate>
      <guid>https://WangDouble-Dev.github.io/post/giscus/</guid>
      <description>Github配置 登录github网站，找到自己要集成giscus的仓库。点击Settings，找到Discussions 。勾选复选框。&#xA;具体操作可参考官方文档。&#xA;Giscus配置 打开giscus网站。在仓库输入框中，输入指定仓库的url地址，如下图。&#xA;如果Github仓库已配置好，会提示该仓库满足所有条件。往下滚动,找到启用 giscus，会自动生成script代码。&#xA;&amp;lt;script src=&amp;#34;https://giscus.app/client.js&amp;#34; data-repo=&amp;#34;owner/repo_name&amp;#34; data-repo-id=&amp;#34;R_key&amp;#34; data-category=&amp;#34;category_name&amp;#34; data-category-id=&amp;#34;DIC_key&amp;#34; data-mapping=&amp;#34;og:title&amp;#34; data-strict=&amp;#34;0&amp;#34; data-reactions-enabled=&amp;#34;1&amp;#34; data-emit-metadata=&amp;#34;0&amp;#34; data-input-position=&amp;#34;bottom&amp;#34; data-theme=&amp;#34;preferred_color_scheme&amp;#34; data-lang=&amp;#34;zh-CN&amp;#34; crossorigin=&amp;#34;anonymous&amp;#34; async&amp;gt; &amp;lt;/script&amp;gt; 将script添加到你的网站中即可。&#xA;番外 一开始没发现giscus网站会自动帮忙生成好script代码，所以repo-id和category-id是用 Github Explorer手动查询的。具体可看隔壁。</description>
    </item>
    <item>
      <title>前后端分离PHP项目线上部署记录</title>
      <link>https://WangDouble-Dev.github.io/post/online_deployment/</link>
      <pubDate>Sat, 23 Dec 2023 18:05:16 +0800</pubDate>
      <guid>https://WangDouble-Dev.github.io/post/online_deployment/</guid>
      <description>前提是已具备基本LNMP环境。以后端的视角记录。主要是Nginx配置。&#xA;背景 项目所在目录：/var/www/html/project_name/&#xA;前端项目所在目录：/var/www/html/project_name/web/&#xA;后端项目所在目录：/var/www/html/project_name/api/&#xA;前端部署 在/var/www/html/project_name/web/下解压缩前端提供的压缩包。&#xA;配置nginx server { listen 80; server_name domain.com www.domain.com; return 301 https://www.domain.com$request_uri; } server { listen 443 ssl http2; #【1】 server_name www.domain.com domain.com; # 域名设置 access_log /var/log/nginx/www.domain.com-access.log; error_log /var/log/nginx/www.domain.com-error.log; index index.html index.htm; # 日志目录 ssl_certificate /etc/letsencrypt/live/domain.com/fullchain.pem; ssl_certificate_key /etc/letsencrypt/live/domain.com/privkey.pem; client_max_body_size 5m; root /var/www/html/project_name/web; index index.html index.htm; location / { try_files $uri $uri/ /index.html;#【2】 } location ^~ /api/ {#【3】 add_header access-control-allow-origin *; proxy_pass http://127.0.0.1:8082;#将api路径下的请求转发到后端 proxy_connect_timeout 1800; proxy_read_timeout 1800; proxy_send_timeout 1800; proxy_set_header X-Forwarded-Host $host:$server_port; proxy_set_header X-Real-IP $remote_addr; proxy_set_header Origin $host:$server_port; proxy_set_header Referer $host:$server_port; proxy_set_header Accept-Encoding &amp;#34;&amp;#34;; # 去除/api/前缀 rewrite ^/api/(.</description>
    </item>
    <item>
      <title>CentOS下使用Docker搭建LNMP开发环境</title>
      <link>https://WangDouble-Dev.github.io/post/docker_php_env/</link>
      <pubDate>Sun, 10 Dec 2023 20:51:53 +0800</pubDate>
      <guid>https://WangDouble-Dev.github.io/post/docker_php_env/</guid>
      <description>运行环境 操作系统：CentOS Linux 8 Docker：Docker Engine - Community 24.0.7 参考网站 Docker如何打包软件 PHP镜像 MySQL镜像 Nginx镜像 Dockerfile reference 具体操作 方案1：使用现成的Docker Compose文件 拉取指定分支（lnump）的文件。&#xA;git clone -b lnmp https://github.com/WangDouble-Dev/docker.git 进入docker-compose.yml所在目录，执行docker-compose up -d命令。-d参数表示后台运行。&#xA;验证 浏览器访问 http://localhost:8080 ,显示nginx 403 Forbidden。说明nginx已经启动。 浏览器访问 http://localhost:8080/test.php ,显示phpinfo信息。说明php已经启动。 命令行执行docker exec -it &amp;lt;container_name_or_id&amp;gt; mysql -uroot -p123456,&amp;lt;container_name_or_id&amp;gt;是你的Docker MySql服务的容器ID。 能够正常连接，说明mysql已经启动。 docker-compose.yml 字段说明 字段 说明 ports 端口映射，本机端口：docker端口。只能改本机。 volumes 文件夹映射，本机目录：docker目录。只能改本机 MYSQL_ROOT_PASSWORD mysql root用户默认密码 注意事项 由于代码跑在docker里，所以 localhost 和 127.0.0.1不再可用。如需要连接mysql，应使用如下地址：&#xA;mysql-server 方案2：自己编写Dockerfile和docker-compose.yml文件 以后再写</description>
    </item>
    <item>
      <title>CentOS下安装Docker</title>
      <link>https://WangDouble-Dev.github.io/post/docker_install/</link>
      <pubDate>Sun, 10 Dec 2023 13:42:49 +0800</pubDate>
      <guid>https://WangDouble-Dev.github.io/post/docker_install/</guid>
      <description>仅记录自己学习Docker的过程。安装的是Docker Engine不是Desktop。&#xA;运行环境 操作系统：CentOS Linux 8 参考网站 官方CentOS下载Docker Engine指引 执行步骤 配置repository 用于安装和更新Docker。&#xA;sudo yum install -y yum-utils sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo 安装Docker Engine sudo yum install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin 启动Docker sudo systemctl start docker 可用sudo systemctl status docker查看Docker状态。&#xA;测试Docker sudo docker run hello-world 当你执行 sudo docker run hello-world 命令时，Docker 会做以下几件事：&#xA;Docker 会在本地查找名为 &amp;ldquo;hello-world&amp;rdquo; 的镜像。 如果在本地没有找到，Docker 会去 Docker Hub（默认的 Docker 镜像仓库）下载 &amp;ldquo;hello-world&amp;rdquo; 镜像。 Docker 会创建一个新的容器，并在这个容器中运行 &amp;ldquo;hello-world&amp;rdquo; 镜像。 &amp;ldquo;hello-world&amp;rdquo; 镜像在下载后存储在 Docker 的镜像库中。你可以通过 docker images 命令查看所有的 Docker 镜像。</description>
    </item>
    <item>
      <title>使用Http Toolkit Android抓包的简易方法</title>
      <link>https://WangDouble-Dev.github.io/post/http_toolkit_android/</link>
      <pubDate>Sat, 21 Oct 2023 23:03:03 +0800</pubDate>
      <guid>https://WangDouble-Dev.github.io/post/http_toolkit_android/</guid>
      <description>主要步骤 1. 在电脑上安装Http Toolkit Http Toolkit Windows端下载地址&#xA;2. 在电脑上安装夜神模拟器 夜神模拟器下载地址&#xA;3. 下载Http Toolkit Android端 可以在谷歌应用商店下载。不支持谷歌应用商店的手机可以在APKPure下载。&#xA;4. 在夜神模拟器中安装Http Toolkit Android端 将下载好的apk文件拖入夜神模拟器中即可。&#xA;5. 开始抓包 在电脑上打开Http Toolkit，选择Android Device via ADB。 然后切换到夜神模拟器中，打开Http Toolkit，会提示是否信任证书，直接点击确定。就能获取到抓包数据了。 常见问题 1. 为什么不用Http Toolkit的Android Device via QR Code？使用起来更便捷，也不用安装夜神模拟器。 因为现在手机的安卓版本普遍较高。在Android 7.0及以上的系统中，就算你安装了Http Toolkit的证书，手机内的应用也不会信任它。而使用Android Device via ADB能避免这个问题。详情请看这里。&#xA;2. 一定要用夜神模拟器吗？其他安卓模拟器不行吗？ 也可以。只要打开你的安卓模拟器之后，Android Device via ADB图标正常显示就可以使用。&#xA;图标这样是不能使用的。&#xA;注意事项 要模拟器开着的情况下，Http Toolkit的Android Device via ADB图标才会正常显示。 要使用Android Device via ADB，设备是需要Root过的。所以最好选择的安卓模拟器是支持Root设置或支持ADB的。这也是我选择夜神模拟器的原因。 其他注意事项请看这里。 </description>
    </item>
    <item>
      <title>Markdown Syntax Guide</title>
      <link>https://WangDouble-Dev.github.io/post/markdown_syntax_guide/</link>
      <pubDate>Thu, 16 Feb 2023 18:58:11 +0800</pubDate>
      <guid>https://WangDouble-Dev.github.io/post/markdown_syntax_guide/</guid>
      <description>This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.&#xA;Headings The following HTML &amp;lt;h1&amp;gt;—&amp;lt;h6&amp;gt; elements represent six levels of section headings. &amp;lt;h1&amp;gt; is the highest section level while &amp;lt;h6&amp;gt; is the lowest.&#xA;H1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo.</description>
    </item>
  </channel>
</rss>
